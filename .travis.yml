language: generic

matrix:
    include:
        - os: linux
          dist: bionic
        - os: osx
          osx_image: xcode8.3

before_install:
    # Remove homebrew
    - |
        if [ "$TRAVIS_OS_NAME" = "osx" ]; then
            curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
            chmod +x ~/uninstall_homebrew
            ~/uninstall_homebrew -fq
            rm ~/uninstall_homebrew
        fi

install:
    # Install miniconda
    - |
        MINICONDA_URL="https://repo.continuum.io/miniconda"
        if [ "$TRAVIS_OS_NAME" = "osx" ]; then
            MINICONDA_FILE="Miniconda3-latest-MacOSX-x86_64.sh"
        else
            MINICONDA_FILE="Miniconda3-latest-Linux-x86_64.sh"
        fi
        curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
        bash $MINICONDA_FILE -b

    # Configure conda
    - |
        source $HOME/miniconda3/bin/activate root
        conda config --add channels conda-forge
        conda config --add channels astrorama
        if [ "$TRAVIS_BRANCH" != "master" ]; then
            conda config --add channels astrorama/label/develop
        fi
        conda install --yes --quiet conda-build
        conda install --yes --quiet anaconda-client

    # Configure MacOSX SDK
    - |
        if [ "$TRAVIS_OS_NAME" = "osx" ]; then
            echo -e "CONDA_BUILD_SYSROOT:\n    - $(xcrun --sdk macosx --show-sdk-path) # [osx]" > $HOME/conda_build_config.yaml
            cat $HOME/conda_build_config.yaml
        fi

script: |
    if [ "$TRAVIS_BRANCH" = "master" ]; then
        LABELS="main"
    elif [ -z "$TRAVIS_PULL_REQUEST_BRANCH" ]; then
        LABELS="$TRAVIS_BRANCH"
    else
        LABELS="pr/$TRAVIS_PULL_REQUEST_BRANCH/$TRAVIS_BRANCH"
    fi 
    conda build --user astrorama ./recipe --token "$ANACONDA_TOKEN" --label "$LABELS"

